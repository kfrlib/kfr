jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - bash: |
     sudo apt-get install -y ninja-build libmpfr-dev
     mkdir build
     cd build
     cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
     ninja
     cd tests
     ctest -V

- job: Linux_ARM
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - bash: |
     sudo apt-get install -y ninja-build g++-arm-linux-gnueabihf qemu
     mkdir build
     cd build
     cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../cmake/arm.cmake -DARCH_FLAGS=-DLIBC_WORKAROUND_GETS=1 ..
     ninja
     cd tests
     ctest -V

- job: macOS
  strategy:
    matrix:
      xcode10.1:
        XCODE_VER: 10.1
      xcode10:
        XCODE_VER: 10
      xcode9.4.1:
        XCODE_VER: 9.4.1
      xcode9.0.1:
        XCODE_VER: 9.0.1
      xcode8.3.3:
        XCODE_VER: 8.3.3
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - bash: |
     /bin/bash -c "sudo xcode-select -s /Applications/Xcode_$(XCODE_VER).app/Contents/Developer"
     brew install ninja
     mkdir build
     cd build
     cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
     ninja
     cd tests
     ctest -V

- job: Windows_MinGW
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - bash: |
     choco install llvm ninja
     mkdir build
     cd build
     cmake -GNinja -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang++.exe" -DCMAKE_BUILD_TYPE=Release ..
     ninja
     cd tests
     ctest -V

- job: Windows_MSVC64
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - bash: |
     choco install llvm ninja
     mkdir build
     cd build
     "/c/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
     cmake -GNinja -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang-cl.exe" -DCMAKE_BUILD_TYPE=Release ..
     ninja
     cd tests
     ctest -V

- job: Windows_MSVC32
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - bash: |
     choco install llvm ninja
     mkdir build
     cd build
     "/c/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Auxiliary/Build/vcvars32.bat"
     cmake -GNinja -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang-cl.exe" -DCMAKE_CXX_FLAGS=-m32 -DCMAKE_BUILD_TYPE=Release ..
     ninja
     cd tests
     ctest -V
